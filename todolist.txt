 Jobs:
- Html/CSS Website Design (Works Between Front and Web)
- WebAPI Controllers 
- Game Engine 
- Data Layer Engineer (works with DB and ensures all (web api mostly) layers can connect/interact)

- Model, populate the database with cards

ask about aspx
ask about tying js and c#


- one user, one cpu. player and cpu build deck along side each other
- Round start, selection of the 5, each one being a different type
- First Opponent randomly selects a card and you RPS to win, if you tie then you dont take damage, losing takes damage, winning deals damage
- loops, each round you choose a acrd and do the same rps. your cards are randomized every round
- within a round, every card match that is lost is one damage dealt and is dealt at the end of the round


t3 thing idk
unit archetypes
- Offensive
- Defensive
- Supportive
- Other
- Special (idk meant for unique max rarity unit, needs their own AI to make them feel special)


in which a player is given a random selection of cards and is to create a 'deck' with them. This deck automatically battles against an enemy AI or an actual player.

Each unit has a set list of stats and an ability (or two, max 3-4) that they can use. Conditions for using said ability will be determined by an internal status and is dependant on the system we end up going with. Getting 3 of a unit combines and upgrades the unit. Each unit has a weight (rarity) applied to it.

Examples of these conditions would be "after x amount of attacks, after recieving x amount of attacks, after x amount of time" and so forth. 

Start off with a PVE, Training Dummy (Debugging/Testing) first and then build up onto more 'Raid Boss' like fights. 

After PVE is completed think about how to implement a PVP aspect

Leaderboard/Ranking System based on PVP, if PVP isn't available system based on how many PVE bosses defeated/progression through them


